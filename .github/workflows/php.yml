name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    #- name: Validate composer.json and composer.lock
    #  run: composer validate
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Cloud Defense Scan
      run: |
        curl https://raw.githubusercontent.com/CloudDefenseAI/cd/master/latest/cd-latest-linux-x64.tar.gz > /tmp/cd-latest-linux-x64.tar.gz
        tar -C /tmp -xzf /tmp/cd-latest-linux-x64.tar.gz
        chmod +x /tmp/cdefense
        /tmp/cdefense scan --verbose --lang=php --api-key=75a81a24-adfc-4bfd-8b32-7562169a9759

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
